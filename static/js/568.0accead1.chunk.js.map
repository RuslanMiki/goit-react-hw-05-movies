{"version":3,"file":"static/js/568.0accead1.chunk.js","mappings":"oLAAaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,yBAAMA,GACd,C,uJCAc,SAASC,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,OACO,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOE,QACL,SAAC,KAAD,CAAMC,GAAIH,EAAME,KAAhB,UACE,mBAAQE,KAAK,SAAb,UACE,gDAKT,CCZD,OAAiB,ECGF,SAASC,EAAT,GAA+B,IA8ExBC,EA9EcC,EAAS,EAATA,MAEhCC,EAOED,EAPFC,GACAC,EAMEF,EANFE,YACAC,EAKEH,EALFG,MACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,OAGIC,EAAsC,GAA1BH,EAAaI,QAAQ,GAEjCC,GAAWhB,EAAAA,EAAAA,MAEjB,OACE,iCACE,iBAAKiB,UAAWC,EAAAA,uBAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,UACE,gBACEC,IAAG,yCAAoCX,GACvCY,IAAKX,EACLY,MAAO,SAGX,iBAAKJ,UAAWC,EAAAA,iBAAhB,WACE,2BACE,0BAAOT,KACP,gCAAQa,EAAcZ,GAAtB,WAEF,0CAgDYL,EAhDkBS,EAiD/BS,KAAKC,MAAMnB,IAjDV,SACA,sCACA,uBAAIO,KACJ,oCACA,uBAAIa,EAAeZ,YAGvB,iBAAKI,UAAWC,EAAAA,0BAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAE,kBAAaK,EAAb,SAAwBR,MAAOiB,EAASjB,MAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMG,GAAE,kBAAaK,EAAb,YAA2BR,MAAOiB,EAASjB,MAAnD,+BAQX,CAmBD,SAASuB,EAAcI,GAErB,OADc,IAAIC,KAAKD,GACVE,aACd,CAMD,SAASH,EAAepB,GACtB,OAAOA,EAAKwB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,KAC1C,C,cC7Ec,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAO7B,EAAP,KAAc8B,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiCA,OA/BAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,KACEI,EAAAA,EAAAA,IAAgBT,GAASU,MAAK,SAAAtC,GAC5B,MAQIA,EAAKA,KAPPE,EADF,EACEA,GACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,OAWFuB,EATe,CACb7B,GAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,OAAAA,GAGH,GAKF,CAJC,MAAO0B,GACPC,EAASD,EACV,CAxBD,QAyBED,GAAa,EACd,CACF,GAAE,CAACL,KAGF,gCACGM,GAASK,EAAAA,GAAAA,MAAA,wCAA6CL,EAAMM,WAC7D,gCACGR,IAAa,SAACS,EAAA,EAAD,CAAQC,MAAO,UAAWC,KAAM,MAC9C,SAAClD,EAAD,KACA,SAACF,EAAA,EAAD,UAAYU,IAAS,SAACF,EAAD,CAAWE,MAAOA,OACvC,SAAC,KAAD,SAIP,C,qKCzDY2C,EAAO,SACdC,GACF,OAAOC,EAAAA,EAAAA,IAAUD,EAClB,ECCH,EANiB,CACfE,SAAU,+BACVC,QAAS,mCACTC,iBAAkB,SCAZF,EAAsBG,EAAAA,SAAZF,EAAYE,EAAAA,QAEjBC,EAAc,WAAe,IAAdC,EAAa,uDAAN,EACjC,OAAOR,EAAA,UACFG,EADE,uCACqCC,EADrC,iBACqDI,GAE7D,EAEYC,EAAuB,SAACC,GAA6B,IAAdF,EAAa,uDAAN,EACzD,OAAOR,EAAA,UACFG,EADE,iCAC+BC,EAD/B,iBAC+CI,EAD/C,kBAC6DE,GAErE,EAEYjB,EAAkB,SAAAT,GAC7B,OAAOgB,EAAA,UAAYG,EAAZ,kBAA8BnB,EAA9B,oBAAiDoB,GACzD,EAEYO,EAAY,SAAA3B,GACvB,OAAOgB,EAAA,UAAYG,EAAZ,kBAA8BnB,EAA9B,4BAAyDoB,GACjE,EAEYQ,EAAe,SAAA5B,GAC1B,OAAOgB,EAAA,UAAYG,EAAZ,kBAA8BnB,EAA9B,4BAAyDoB,GACjE,C","sources":["components/Container/Container.jsx","components/BackButton/BackButton.jsx","components/MovieCard/MovieCard.module.css","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetails.jsx","services/api.js","services/settings.js","services/fetchMovies.js"],"sourcesContent":["export const Container = ({ children }) => {\r\n  return <div>{children}</div>;\r\n};\r\n","import { Link, useLocation } from 'react-router-dom';\r\n\r\nexport default function BackButton() {\r\n  const { state } = useLocation();\r\n  return (\r\n    state?.from && (\r\n      <Link to={state.from}>\r\n        <button type=\"button\">\r\n          <span>‚Üê Go back</span>\r\n        </button>\r\n      </Link>\r\n    )\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MovieCard.module.css';\r\n\r\nexport default function MovieCard({ movie }) {\r\n  const {\r\n    id,\r\n    poster_path,\r\n    title,\r\n    release_date,\r\n    vote_average,\r\n    overview,\r\n    genres,\r\n  } = movie;\r\n\r\n  const voteScore = vote_average.toFixed(1) * 10;\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles['card__info--general']}>\r\n        <div className={styles['img__wrapper']}>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n            alt={title}\r\n            width={250}\r\n          />\r\n        </div>\r\n        <div className={styles['details__wrapper']}>\r\n          <h2>\r\n            <span>{title}</span>\r\n            <span>({getRelizeYear(release_date)})</span>\r\n          </h2>\r\n          <p> User score: {getUserScore(voteScore)} %</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h3>Genres</h3>\r\n          <p>{getGenresNames(genres)}</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles['card__info--additional']}>\r\n        <h3>Additional information</h3>\r\n        <ul>\r\n          <li>\r\n            <Link to={`/movies/${id}/cast`} state={location.state}>\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`/movies/${id}/reviews`} state={location.state}>\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    release_date: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n      }).isRequired\r\n    ).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nfunction getRelizeYear(date) {\r\n  const today = new Date(date);\r\n  return today.getFullYear();\r\n}\r\n\r\nfunction getUserScore(data) {\r\n  return Math.round(data);\r\n}\r\n\r\nfunction getGenresNames(data) {\r\n  return data.map(({ name }) => name).join(', ');\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, Outlet } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Container } from 'components/Container/Container';\r\nimport Loader from 'components/Loader/Loader';\r\nimport BackButton from 'components/BackButton/BackButton';\r\nimport MovieCard from 'components/MovieCard/MovieCard';\r\n\r\nimport { fetchMoviesById } from 'services/fetchMovies';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    try {\r\n      fetchMoviesById(movieId).then(data => {\r\n        const {\r\n          id,\r\n          poster_path,\r\n          title,\r\n          release_date,\r\n          vote_average,\r\n          overview,\r\n          genres,\r\n        } = data.data;\r\n        const object = {\r\n          id,\r\n          poster_path,\r\n          title,\r\n          release_date,\r\n          vote_average,\r\n          overview,\r\n          genres,\r\n        };\r\n        setMovie(object);\r\n      });\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\r\n      <>\r\n        {isLoading && <Loader color={'#3f51b5'} size={32} />}\r\n        <BackButton />\r\n        <Container>{movie && <MovieCard movie={movie} />}</Container>\r\n        <Outlet />\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const http = {\r\n  get(url) {\r\n    return axios.get(url);\r\n  },\r\n  post(url, body) {\r\n    return axios.post(url, body);\r\n  },\r\n};","const settings = {\r\n  BASE_URL: 'https://api.themoviedb.org/3',\r\n  API_KEY: '4d0f1a70283628d770bc4f97516afca6',\r\n  DEFAULT_LANGUAGE: 'en-US',\r\n};\r\n\r\nexport default settings;","import { http } from './api';\r\nimport apiSettings from './settings';\r\n\r\nconst { BASE_URL, API_KEY } = apiSettings;\r\n\r\nexport const fetchMovies = (page = 1) => {\r\n  return http.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\r\n  );\r\n};\r\n\r\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\r\n  return http.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\r\n  );\r\n};\r\n\r\nexport const fetchMoviesById = movieId => {\r\n  return http.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchCast = movieId => {\r\n  return http.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchReviews = movieId => {\r\n  return http.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\r\n};"],"names":["Container","children","BackButton","state","useLocation","from","to","type","MovieCard","data","movie","id","poster_path","title","release_date","vote_average","overview","genres","voteScore","toFixed","location","className","styles","src","alt","width","getRelizeYear","Math","round","getGenresNames","date","Date","getFullYear","map","name","join","MovieDetailsPage","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","fetchMoviesById","then","toast","message","Loader","color","size","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesByRequest","searchRequest","fetchCast","fetchReviews"],"sourceRoot":""}